#!/usr/bin/python
# -*- coding: utf-8 -*-

# Copyright Â© 2012 Humbug, Inc.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

import sys
from os import path
import optparse

usage = """send-message [options] <recipients>

Sends a test message to the specified recipients.

Example: send-message --sender=you@example.com --type=stream commits --subject="my subject" --message="test message"
Example: send-message --sender=you@example.com --site=https://zephyr.humbughq.com user1@example.com user2@example.com
"""
parser = optparse.OptionParser(usage=usage)
parser.add_option('--api-key')
parser.add_option('--sender')
parser.add_option('--subject', default="test")
parser.add_option('--message', default="test message")
parser.add_option('--site',   default='https://humbughq.com')
parser.add_option('--type',   default='private')
(options, args) = parser.parse_args()

if len(args) == 0:
    parser.error("You must specify recipients")

sys.path.append(path.join(path.dirname(__file__), '..'))
import humbug
client = humbug.Client(
    email=options.sender,
    api_key=options.api_key,
    verbose=True,
    site=options.site)

message_data = {
    "type": options.type,
    "content": options.message,
    "subject": options.subject,
    "to": args,
}
print client.send_message(message_data)
